<?php

namespace App\Proxies\__CG__\App\Domain\User;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class UserEntity extends \App\Domain\User\UserEntity implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'status', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'role', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'firstName', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'lastName', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'phone', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'email', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'resetPassHash', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'confirmEmailHash', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'password', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'projectUsers', 'id', 'created', 'updated', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'deleted'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'status', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'role', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'firstName', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'lastName', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'phone', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'email', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'resetPassHash', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'confirmEmailHash', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'password', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'projectUsers', 'id', 'created', 'updated', '' . "\0" . 'App\\Domain\\User\\UserEntity' . "\0" . 'deleted'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (UserEntity $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getStatus(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(int $status): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getRole(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRole', []);

        return parent::getRole();
    }

    /**
     * {@inheritDoc}
     */
    public function setRole(int $role): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRole', [$role]);

        parent::setRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', []);

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName(string $firstName): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', [$firstName]);

        parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', []);

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName(string $lastName): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', [$lastName]);

        parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone', []);

        return parent::getPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone(string $phone): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone', [$phone]);

        parent::setPhone($phone);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(string $email): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getResetPassHash(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResetPassHash', []);

        return parent::getResetPassHash();
    }

    /**
     * {@inheritDoc}
     */
    public function setResetPassHash(?string $resetPassHash): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResetPassHash', [$resetPassHash]);

        parent::setResetPassHash($resetPassHash);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmEmailHash(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmEmailHash', []);

        return parent::getConfirmEmailHash();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmEmailHash(?string $confirmEmailHash): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmEmailHash', [$confirmEmailHash]);

        parent::setConfirmEmailHash($confirmEmailHash);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function verifyPassword($password): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'verifyPassword', [$password]);

        return parent::verifyPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectUsers(): ?\Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectUsers', []);

        return parent::getProjectUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectUsers(?\Doctrine\Common\Collections\Collection $projectUsers): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectUsers', [$projectUsers]);

        parent::setProjectUsers($projectUsers);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedValue', []);

        return parent::setUpdatedValue();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedLog()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedLog', []);

        return parent::getCreatedLog();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated($updated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated', [$updated]);

        return parent::setUpdated($updated);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated', []);

        return parent::getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommonValues(\App\Infrastructure\Shared\DTO\AbstractDTOInterface $DTO, bool $isUpdate = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommonValues', [$DTO, $isUpdate]);

        return parent::setCommonValues($DTO, $isUpdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeleted(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeleted', []);

        return parent::getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleted(?\DateTime $deleted): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleted', [$deleted]);

        parent::setDeleted($deleted);
    }

}
